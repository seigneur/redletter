"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tldts-core";
exports.ids = ["vendor-chunks/tldts-core"];
exports.modules = {

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/index.js":
/*!***************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastPathLookup: () => (/* reexport safe */ _src_lookup_fast_path__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   getEmptyResult: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.getEmptyResult),\n/* harmony export */   parseImpl: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.parseImpl),\n/* harmony export */   resetResult: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.resetResult),\n/* harmony export */   setDefaults: () => (/* reexport safe */ _src_options__WEBPACK_IMPORTED_MODULE_2__.setDefaults)\n/* harmony export */ });\n/* harmony import */ var _src_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/factory */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js\");\n/* harmony import */ var _src_lookup_fast_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/lookup/fast-path */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js\");\n/* harmony import */ var _src_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/options */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\");\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3RTtBQUNMO0FBQ3ZCO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L2luZGV4LmpzPzUwOGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgcGFyc2VJbXBsLCBnZXRFbXB0eVJlc3VsdCwgcmVzZXRSZXN1bHQsIH0gZnJvbSAnLi9zcmMvZmFjdG9yeSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGZhc3RQYXRoTG9va3VwIH0gZnJvbSAnLi9zcmMvbG9va3VwL2Zhc3QtcGF0aCc7XG5leHBvcnQgeyBzZXREZWZhdWx0cyB9IGZyb20gJy4vc3JjL29wdGlvbnMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getDomainWithoutSuffix)\n/* harmony export */ });\n/**\n * Return the part of domain without suffix.\n *\n * Example: for domain 'foo.com', the result would be 'foo'.\n */\nfunction getDomainWithoutSuffix(domain, suffix) {\n    // Note: here `domain` and `suffix` cannot have the same length because in\n    // this case we set `domain` to `null` instead. It is thus safe to assume\n    // that `suffix` is shorter than `domain`.\n    return domain.slice(0, -suffix.length - 1);\n}\n//# sourceMappingURL=domain-without-suffix.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZG9tYWluLXdpdGhvdXQtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2RvbWFpbi13aXRob3V0LXN1ZmZpeC5qcz82ZjAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJuIHRoZSBwYXJ0IG9mIGRvbWFpbiB3aXRob3V0IHN1ZmZpeC5cbiAqXG4gKiBFeGFtcGxlOiBmb3IgZG9tYWluICdmb28uY29tJywgdGhlIHJlc3VsdCB3b3VsZCBiZSAnZm9vJy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RG9tYWluV2l0aG91dFN1ZmZpeChkb21haW4sIHN1ZmZpeCkge1xuICAgIC8vIE5vdGU6IGhlcmUgYGRvbWFpbmAgYW5kIGBzdWZmaXhgIGNhbm5vdCBoYXZlIHRoZSBzYW1lIGxlbmd0aCBiZWNhdXNlIGluXG4gICAgLy8gdGhpcyBjYXNlIHdlIHNldCBgZG9tYWluYCB0byBgbnVsbGAgaW5zdGVhZC4gSXQgaXMgdGh1cyBzYWZlIHRvIGFzc3VtZVxuICAgIC8vIHRoYXQgYHN1ZmZpeGAgaXMgc2hvcnRlciB0aGFuIGBkb21haW5gLlxuICAgIHJldHVybiBkb21haW4uc2xpY2UoMCwgLXN1ZmZpeC5sZW5ndGggLSAxKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvbWFpbi13aXRob3V0LXN1ZmZpeC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js":
/*!********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/domain.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getDomain)\n/* harmony export */ });\n/**\n * Check if `vhost` is a valid suffix of `hostname` (top-domain)\n *\n * It means that `vhost` needs to be a suffix of `hostname` and we then need to\n * make sure that: either they are equal, or the character preceding `vhost` in\n * `hostname` is a '.' (it should not be a partial label).\n *\n * * hostname = 'not.evil.com' and vhost = 'vil.com'      => not ok\n * * hostname = 'not.evil.com' and vhost = 'evil.com'     => ok\n * * hostname = 'not.evil.com' and vhost = 'not.evil.com' => ok\n */\nfunction shareSameDomainSuffix(hostname, vhost) {\n    if (hostname.endsWith(vhost)) {\n        return (hostname.length === vhost.length ||\n            hostname[hostname.length - vhost.length - 1] === '.');\n    }\n    return false;\n}\n/**\n * Given a hostname and its public suffix, extract the general domain.\n */\nfunction extractDomainWithSuffix(hostname, publicSuffix) {\n    // Locate the index of the last '.' in the part of the `hostname` preceding\n    // the public suffix.\n    //\n    // examples:\n    //   1. not.evil.co.uk  => evil.co.uk\n    //         ^    ^\n    //         |    | start of public suffix\n    //         | index of the last dot\n    //\n    //   2. example.co.uk   => example.co.uk\n    //     ^       ^\n    //     |       | start of public suffix\n    //     |\n    //     | (-1) no dot found before the public suffix\n    const publicSuffixIndex = hostname.length - publicSuffix.length - 2;\n    const lastDotBeforeSuffixIndex = hostname.lastIndexOf('.', publicSuffixIndex);\n    // No '.' found, then `hostname` is the general domain (no sub-domain)\n    if (lastDotBeforeSuffixIndex === -1) {\n        return hostname;\n    }\n    // Extract the part between the last '.'\n    return hostname.slice(lastDotBeforeSuffixIndex + 1);\n}\n/**\n * Detects the domain based on rules and upon and a host string\n */\nfunction getDomain(suffix, hostname, options) {\n    // Check if `hostname` ends with a member of `validHosts`.\n    if (options.validHosts !== null) {\n        const validHosts = options.validHosts;\n        for (const vhost of validHosts) {\n            if ( /*@__INLINE__*/shareSameDomainSuffix(hostname, vhost)) {\n                return vhost;\n            }\n        }\n    }\n    let numberOfLeadingDots = 0;\n    if (hostname.startsWith('.')) {\n        while (numberOfLeadingDots < hostname.length &&\n            hostname[numberOfLeadingDots] === '.') {\n            numberOfLeadingDots += 1;\n        }\n    }\n    // If `hostname` is a valid public suffix, then there is no domain to return.\n    // Since we already know that `getPublicSuffix` returns a suffix of `hostname`\n    // there is no need to perform a string comparison and we only compare the\n    // size.\n    if (suffix.length === hostname.length - numberOfLeadingDots) {\n        return null;\n    }\n    // To extract the general domain, we start by identifying the public suffix\n    // (if any), then consider the domain to be the public suffix with one added\n    // level of depth. (e.g.: if hostname is `not.evil.co.uk` and public suffix:\n    // `co.uk`, then we take one more level: `evil`, giving the final result:\n    // `evil.co.uk`).\n    return /*@__INLINE__*/ extractDomainWithSuffix(hostname, suffix);\n}\n//# sourceMappingURL=domain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZG9tYWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9kb21haW4uanM/YjBmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIGB2aG9zdGAgaXMgYSB2YWxpZCBzdWZmaXggb2YgYGhvc3RuYW1lYCAodG9wLWRvbWFpbilcbiAqXG4gKiBJdCBtZWFucyB0aGF0IGB2aG9zdGAgbmVlZHMgdG8gYmUgYSBzdWZmaXggb2YgYGhvc3RuYW1lYCBhbmQgd2UgdGhlbiBuZWVkIHRvXG4gKiBtYWtlIHN1cmUgdGhhdDogZWl0aGVyIHRoZXkgYXJlIGVxdWFsLCBvciB0aGUgY2hhcmFjdGVyIHByZWNlZGluZyBgdmhvc3RgIGluXG4gKiBgaG9zdG5hbWVgIGlzIGEgJy4nIChpdCBzaG91bGQgbm90IGJlIGEgcGFydGlhbCBsYWJlbCkuXG4gKlxuICogKiBob3N0bmFtZSA9ICdub3QuZXZpbC5jb20nIGFuZCB2aG9zdCA9ICd2aWwuY29tJyAgICAgID0+IG5vdCBva1xuICogKiBob3N0bmFtZSA9ICdub3QuZXZpbC5jb20nIGFuZCB2aG9zdCA9ICdldmlsLmNvbScgICAgID0+IG9rXG4gKiAqIGhvc3RuYW1lID0gJ25vdC5ldmlsLmNvbScgYW5kIHZob3N0ID0gJ25vdC5ldmlsLmNvbScgPT4gb2tcbiAqL1xuZnVuY3Rpb24gc2hhcmVTYW1lRG9tYWluU3VmZml4KGhvc3RuYW1lLCB2aG9zdCkge1xuICAgIGlmIChob3N0bmFtZS5lbmRzV2l0aCh2aG9zdCkpIHtcbiAgICAgICAgcmV0dXJuIChob3N0bmFtZS5sZW5ndGggPT09IHZob3N0Lmxlbmd0aCB8fFxuICAgICAgICAgICAgaG9zdG5hbWVbaG9zdG5hbWUubGVuZ3RoIC0gdmhvc3QubGVuZ3RoIC0gMV0gPT09ICcuJyk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogR2l2ZW4gYSBob3N0bmFtZSBhbmQgaXRzIHB1YmxpYyBzdWZmaXgsIGV4dHJhY3QgdGhlIGdlbmVyYWwgZG9tYWluLlxuICovXG5mdW5jdGlvbiBleHRyYWN0RG9tYWluV2l0aFN1ZmZpeChob3N0bmFtZSwgcHVibGljU3VmZml4KSB7XG4gICAgLy8gTG9jYXRlIHRoZSBpbmRleCBvZiB0aGUgbGFzdCAnLicgaW4gdGhlIHBhcnQgb2YgdGhlIGBob3N0bmFtZWAgcHJlY2VkaW5nXG4gICAgLy8gdGhlIHB1YmxpYyBzdWZmaXguXG4gICAgLy9cbiAgICAvLyBleGFtcGxlczpcbiAgICAvLyAgIDEuIG5vdC5ldmlsLmNvLnVrICA9PiBldmlsLmNvLnVrXG4gICAgLy8gICAgICAgICBeICAgIF5cbiAgICAvLyAgICAgICAgIHwgICAgfCBzdGFydCBvZiBwdWJsaWMgc3VmZml4XG4gICAgLy8gICAgICAgICB8IGluZGV4IG9mIHRoZSBsYXN0IGRvdFxuICAgIC8vXG4gICAgLy8gICAyLiBleGFtcGxlLmNvLnVrICAgPT4gZXhhbXBsZS5jby51a1xuICAgIC8vICAgICBeICAgICAgIF5cbiAgICAvLyAgICAgfCAgICAgICB8IHN0YXJ0IG9mIHB1YmxpYyBzdWZmaXhcbiAgICAvLyAgICAgfFxuICAgIC8vICAgICB8ICgtMSkgbm8gZG90IGZvdW5kIGJlZm9yZSB0aGUgcHVibGljIHN1ZmZpeFxuICAgIGNvbnN0IHB1YmxpY1N1ZmZpeEluZGV4ID0gaG9zdG5hbWUubGVuZ3RoIC0gcHVibGljU3VmZml4Lmxlbmd0aCAtIDI7XG4gICAgY29uc3QgbGFzdERvdEJlZm9yZVN1ZmZpeEluZGV4ID0gaG9zdG5hbWUubGFzdEluZGV4T2YoJy4nLCBwdWJsaWNTdWZmaXhJbmRleCk7XG4gICAgLy8gTm8gJy4nIGZvdW5kLCB0aGVuIGBob3N0bmFtZWAgaXMgdGhlIGdlbmVyYWwgZG9tYWluIChubyBzdWItZG9tYWluKVxuICAgIGlmIChsYXN0RG90QmVmb3JlU3VmZml4SW5kZXggPT09IC0xKSB7XG4gICAgICAgIHJldHVybiBob3N0bmFtZTtcbiAgICB9XG4gICAgLy8gRXh0cmFjdCB0aGUgcGFydCBiZXR3ZWVuIHRoZSBsYXN0ICcuJ1xuICAgIHJldHVybiBob3N0bmFtZS5zbGljZShsYXN0RG90QmVmb3JlU3VmZml4SW5kZXggKyAxKTtcbn1cbi8qKlxuICogRGV0ZWN0cyB0aGUgZG9tYWluIGJhc2VkIG9uIHJ1bGVzIGFuZCB1cG9uIGFuZCBhIGhvc3Qgc3RyaW5nXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldERvbWFpbihzdWZmaXgsIGhvc3RuYW1lLCBvcHRpb25zKSB7XG4gICAgLy8gQ2hlY2sgaWYgYGhvc3RuYW1lYCBlbmRzIHdpdGggYSBtZW1iZXIgb2YgYHZhbGlkSG9zdHNgLlxuICAgIGlmIChvcHRpb25zLnZhbGlkSG9zdHMgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgdmFsaWRIb3N0cyA9IG9wdGlvbnMudmFsaWRIb3N0cztcbiAgICAgICAgZm9yIChjb25zdCB2aG9zdCBvZiB2YWxpZEhvc3RzKSB7XG4gICAgICAgICAgICBpZiAoIC8qQF9fSU5MSU5FX18qL3NoYXJlU2FtZURvbWFpblN1ZmZpeChob3N0bmFtZSwgdmhvc3QpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZob3N0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBudW1iZXJPZkxlYWRpbmdEb3RzID0gMDtcbiAgICBpZiAoaG9zdG5hbWUuc3RhcnRzV2l0aCgnLicpKSB7XG4gICAgICAgIHdoaWxlIChudW1iZXJPZkxlYWRpbmdEb3RzIDwgaG9zdG5hbWUubGVuZ3RoICYmXG4gICAgICAgICAgICBob3N0bmFtZVtudW1iZXJPZkxlYWRpbmdEb3RzXSA9PT0gJy4nKSB7XG4gICAgICAgICAgICBudW1iZXJPZkxlYWRpbmdEb3RzICs9IDE7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSWYgYGhvc3RuYW1lYCBpcyBhIHZhbGlkIHB1YmxpYyBzdWZmaXgsIHRoZW4gdGhlcmUgaXMgbm8gZG9tYWluIHRvIHJldHVybi5cbiAgICAvLyBTaW5jZSB3ZSBhbHJlYWR5IGtub3cgdGhhdCBgZ2V0UHVibGljU3VmZml4YCByZXR1cm5zIGEgc3VmZml4IG9mIGBob3N0bmFtZWBcbiAgICAvLyB0aGVyZSBpcyBubyBuZWVkIHRvIHBlcmZvcm0gYSBzdHJpbmcgY29tcGFyaXNvbiBhbmQgd2Ugb25seSBjb21wYXJlIHRoZVxuICAgIC8vIHNpemUuXG4gICAgaWYgKHN1ZmZpeC5sZW5ndGggPT09IGhvc3RuYW1lLmxlbmd0aCAtIG51bWJlck9mTGVhZGluZ0RvdHMpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIFRvIGV4dHJhY3QgdGhlIGdlbmVyYWwgZG9tYWluLCB3ZSBzdGFydCBieSBpZGVudGlmeWluZyB0aGUgcHVibGljIHN1ZmZpeFxuICAgIC8vIChpZiBhbnkpLCB0aGVuIGNvbnNpZGVyIHRoZSBkb21haW4gdG8gYmUgdGhlIHB1YmxpYyBzdWZmaXggd2l0aCBvbmUgYWRkZWRcbiAgICAvLyBsZXZlbCBvZiBkZXB0aC4gKGUuZy46IGlmIGhvc3RuYW1lIGlzIGBub3QuZXZpbC5jby51a2AgYW5kIHB1YmxpYyBzdWZmaXg6XG4gICAgLy8gYGNvLnVrYCwgdGhlbiB3ZSB0YWtlIG9uZSBtb3JlIGxldmVsOiBgZXZpbGAsIGdpdmluZyB0aGUgZmluYWwgcmVzdWx0OlxuICAgIC8vIGBldmlsLmNvLnVrYCkuXG4gICAgcmV0dXJuIC8qQF9fSU5MSU5FX18qLyBleHRyYWN0RG9tYWluV2l0aFN1ZmZpeChob3N0bmFtZSwgc3VmZml4KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvbWFpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js":
/*!******************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/extract-hostname.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ extractHostname)\n/* harmony export */ });\n/**\n * @param url - URL we want to extract a hostname from.\n * @param urlIsValidHostname - hint from caller; true if `url` is already a valid hostname.\n */\nfunction extractHostname(url, urlIsValidHostname) {\n    let start = 0;\n    let end = url.length;\n    let hasUpper = false;\n    // If url is not already a valid hostname, then try to extract hostname.\n    if (!urlIsValidHostname) {\n        // Special handling of data URLs\n        if (url.startsWith('data:')) {\n            return null;\n        }\n        // Trim leading spaces\n        while (start < url.length && url.charCodeAt(start) <= 32) {\n            start += 1;\n        }\n        // Trim trailing spaces\n        while (end > start + 1 && url.charCodeAt(end - 1) <= 32) {\n            end -= 1;\n        }\n        // Skip scheme.\n        if (url.charCodeAt(start) === 47 /* '/' */ &&\n            url.charCodeAt(start + 1) === 47 /* '/' */) {\n            start += 2;\n        }\n        else {\n            const indexOfProtocol = url.indexOf(':/', start);\n            if (indexOfProtocol !== -1) {\n                // Implement fast-path for common protocols. We expect most protocols\n                // should be one of these 4 and thus we will not need to perform the\n                // more expansive validity check most of the time.\n                const protocolSize = indexOfProtocol - start;\n                const c0 = url.charCodeAt(start);\n                const c1 = url.charCodeAt(start + 1);\n                const c2 = url.charCodeAt(start + 2);\n                const c3 = url.charCodeAt(start + 3);\n                const c4 = url.charCodeAt(start + 4);\n                if (protocolSize === 5 &&\n                    c0 === 104 /* 'h' */ &&\n                    c1 === 116 /* 't' */ &&\n                    c2 === 116 /* 't' */ &&\n                    c3 === 112 /* 'p' */ &&\n                    c4 === 115 /* 's' */) {\n                    // https\n                }\n                else if (protocolSize === 4 &&\n                    c0 === 104 /* 'h' */ &&\n                    c1 === 116 /* 't' */ &&\n                    c2 === 116 /* 't' */ &&\n                    c3 === 112 /* 'p' */) {\n                    // http\n                }\n                else if (protocolSize === 3 &&\n                    c0 === 119 /* 'w' */ &&\n                    c1 === 115 /* 's' */ &&\n                    c2 === 115 /* 's' */) {\n                    // wss\n                }\n                else if (protocolSize === 2 &&\n                    c0 === 119 /* 'w' */ &&\n                    c1 === 115 /* 's' */) {\n                    // ws\n                }\n                else {\n                    // Check that scheme is valid\n                    for (let i = start; i < indexOfProtocol; i += 1) {\n                        const lowerCaseCode = url.charCodeAt(i) | 32;\n                        if (!(((lowerCaseCode >= 97 && lowerCaseCode <= 122) || // [a, z]\n                            (lowerCaseCode >= 48 && lowerCaseCode <= 57) || // [0, 9]\n                            lowerCaseCode === 46 || // '.'\n                            lowerCaseCode === 45 || // '-'\n                            lowerCaseCode === 43) // '+'\n                        )) {\n                            return null;\n                        }\n                    }\n                }\n                // Skip 0, 1 or more '/' after ':/'\n                start = indexOfProtocol + 2;\n                while (url.charCodeAt(start) === 47 /* '/' */) {\n                    start += 1;\n                }\n            }\n        }\n        // Detect first occurrence of '/', '?' or '#'. We also keep track of the\n        // last occurrence of '@', ']' or ':' to speed-up subsequent parsing of\n        // (respectively), identifier, ipv6 or port.\n        let indexOfIdentifier = -1;\n        let indexOfClosingBracket = -1;\n        let indexOfPort = -1;\n        for (let i = start; i < end; i += 1) {\n            const code = url.charCodeAt(i);\n            if (code === 35 || // '#'\n                code === 47 || // '/'\n                code === 63 // '?'\n            ) {\n                end = i;\n                break;\n            }\n            else if (code === 64) {\n                // '@'\n                indexOfIdentifier = i;\n            }\n            else if (code === 93) {\n                // ']'\n                indexOfClosingBracket = i;\n            }\n            else if (code === 58) {\n                // ':'\n                indexOfPort = i;\n            }\n            else if (code >= 65 && code <= 90) {\n                hasUpper = true;\n            }\n        }\n        // Detect identifier: '@'\n        if (indexOfIdentifier !== -1 &&\n            indexOfIdentifier > start &&\n            indexOfIdentifier < end) {\n            start = indexOfIdentifier + 1;\n        }\n        // Handle ipv6 addresses\n        if (url.charCodeAt(start) === 91 /* '[' */) {\n            if (indexOfClosingBracket !== -1) {\n                return url.slice(start + 1, indexOfClosingBracket).toLowerCase();\n            }\n            return null;\n        }\n        else if (indexOfPort !== -1 && indexOfPort > start && indexOfPort < end) {\n            // Detect port: ':'\n            end = indexOfPort;\n        }\n    }\n    // Trim trailing dots\n    while (end > start + 1 && url.charCodeAt(end - 1) === 46 /* '.' */) {\n        end -= 1;\n    }\n    const hostname = start !== 0 || end !== url.length ? url.slice(start, end) : url;\n    if (hasUpper) {\n        return hostname.toLowerCase();\n    }\n    return hostname;\n}\n//# sourceMappingURL=extract-hostname.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js":
/*!*********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/factory.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEmptyResult: () => (/* binding */ getEmptyResult),\n/* harmony export */   parseImpl: () => (/* binding */ parseImpl),\n/* harmony export */   resetResult: () => (/* binding */ resetResult)\n/* harmony export */ });\n/* harmony import */ var _domain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domain */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js\");\n/* harmony import */ var _domain_without_suffix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domain-without-suffix */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js\");\n/* harmony import */ var _extract_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extract-hostname */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js\");\n/* harmony import */ var _is_ip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is-ip */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js\");\n/* harmony import */ var _is_valid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is-valid */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./options */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\");\n/* harmony import */ var _subdomain__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./subdomain */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js\");\n/**\n * Implement a factory allowing to plug different implementations of suffix\n * lookup (e.g.: using a trie or the packed hashes datastructures). This is used\n * and exposed in `tldts.ts` and `tldts-experimental.ts` bundle entrypoints.\n */\n\n\n\n\n\n\n\nfunction getEmptyResult() {\n    return {\n        domain: null,\n        domainWithoutSuffix: null,\n        hostname: null,\n        isIcann: null,\n        isIp: null,\n        isPrivate: null,\n        publicSuffix: null,\n        subdomain: null,\n    };\n}\nfunction resetResult(result) {\n    result.domain = null;\n    result.domainWithoutSuffix = null;\n    result.hostname = null;\n    result.isIcann = null;\n    result.isIp = null;\n    result.isPrivate = null;\n    result.publicSuffix = null;\n    result.subdomain = null;\n}\nfunction parseImpl(url, step, suffixLookup, partialOptions, result) {\n    const options = /*@__INLINE__*/ (0,_options__WEBPACK_IMPORTED_MODULE_5__.setDefaults)(partialOptions);\n    // Very fast approximate check to make sure `url` is a string. This is needed\n    // because the library will not necessarily be used in a typed setup and\n    // values of arbitrary types might be given as argument.\n    if (typeof url !== 'string') {\n        return result;\n    }\n    // Extract hostname from `url` only if needed. This can be made optional\n    // using `options.extractHostname`. This option will typically be used\n    // whenever we are sure the inputs to `parse` are already hostnames and not\n    // arbitrary URLs.\n    //\n    // `mixedInput` allows to specify if we expect a mix of URLs and hostnames\n    // as input. If only hostnames are expected then `extractHostname` can be\n    // set to `false` to speed-up parsing. If only URLs are expected then\n    // `mixedInputs` can be set to `false`. The `mixedInputs` is only a hint\n    // and will not change the behavior of the library.\n    if (!options.extractHostname) {\n        result.hostname = url;\n    }\n    else if (options.mixedInputs) {\n        result.hostname = (0,_extract_hostname__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, (0,_is_valid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(url));\n    }\n    else {\n        result.hostname = (0,_extract_hostname__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, false);\n    }\n    if (step === 0 /* FLAG.HOSTNAME */ || result.hostname === null) {\n        return result;\n    }\n    // Check if `hostname` is a valid ip address\n    if (options.detectIp) {\n        result.isIp = (0,_is_ip__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(result.hostname);\n        if (result.isIp) {\n            return result;\n        }\n    }\n    // Perform optional hostname validation. If hostname is not valid, no need to\n    // go further as there will be no valid domain or sub-domain.\n    if (options.validateHostname &&\n        options.extractHostname &&\n        !(0,_is_valid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(result.hostname)) {\n        result.hostname = null;\n        return result;\n    }\n    // Extract public suffix\n    suffixLookup(result.hostname, options, result);\n    if (step === 2 /* FLAG.PUBLIC_SUFFIX */ || result.publicSuffix === null) {\n        return result;\n    }\n    // Extract domain\n    result.domain = (0,_domain__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(result.publicSuffix, result.hostname, options);\n    if (step === 3 /* FLAG.DOMAIN */ || result.domain === null) {\n        return result;\n    }\n    // Extract subdomain\n    result.subdomain = (0,_subdomain__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(result.hostname, result.domain);\n    if (step === 4 /* FLAG.SUB_DOMAIN */) {\n        return result;\n    }\n    // Extract domain without suffix\n    result.domainWithoutSuffix = (0,_domain_without_suffix__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(result.domain, result.publicSuffix);\n    return result;\n}\n//# sourceMappingURL=factory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZmFjdG9yeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNpQztBQUM0QjtBQUNaO0FBQ3RCO0FBQ2M7QUFDRDtBQUNEO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQ0FBb0MscURBQVc7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw2REFBZSxNQUFNLHFEQUFlO0FBQzlEO0FBQ0E7QUFDQSwwQkFBMEIsNkRBQWU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFJO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHFEQUFlO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtREFBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzREFBWTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxrRUFBc0I7QUFDdkQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9mYWN0b3J5LmpzPzQ5ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbXBsZW1lbnQgYSBmYWN0b3J5IGFsbG93aW5nIHRvIHBsdWcgZGlmZmVyZW50IGltcGxlbWVudGF0aW9ucyBvZiBzdWZmaXhcbiAqIGxvb2t1cCAoZS5nLjogdXNpbmcgYSB0cmllIG9yIHRoZSBwYWNrZWQgaGFzaGVzIGRhdGFzdHJ1Y3R1cmVzKS4gVGhpcyBpcyB1c2VkXG4gKiBhbmQgZXhwb3NlZCBpbiBgdGxkdHMudHNgIGFuZCBgdGxkdHMtZXhwZXJpbWVudGFsLnRzYCBidW5kbGUgZW50cnlwb2ludHMuXG4gKi9cbmltcG9ydCBnZXREb21haW4gZnJvbSAnLi9kb21haW4nO1xuaW1wb3J0IGdldERvbWFpbldpdGhvdXRTdWZmaXggZnJvbSAnLi9kb21haW4td2l0aG91dC1zdWZmaXgnO1xuaW1wb3J0IGV4dHJhY3RIb3N0bmFtZSBmcm9tICcuL2V4dHJhY3QtaG9zdG5hbWUnO1xuaW1wb3J0IGlzSXAgZnJvbSAnLi9pcy1pcCc7XG5pbXBvcnQgaXNWYWxpZEhvc3RuYW1lIGZyb20gJy4vaXMtdmFsaWQnO1xuaW1wb3J0IHsgc2V0RGVmYXVsdHMgfSBmcm9tICcuL29wdGlvbnMnO1xuaW1wb3J0IGdldFN1YmRvbWFpbiBmcm9tICcuL3N1YmRvbWFpbic7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RW1wdHlSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZG9tYWluOiBudWxsLFxuICAgICAgICBkb21haW5XaXRob3V0U3VmZml4OiBudWxsLFxuICAgICAgICBob3N0bmFtZTogbnVsbCxcbiAgICAgICAgaXNJY2FubjogbnVsbCxcbiAgICAgICAgaXNJcDogbnVsbCxcbiAgICAgICAgaXNQcml2YXRlOiBudWxsLFxuICAgICAgICBwdWJsaWNTdWZmaXg6IG51bGwsXG4gICAgICAgIHN1YmRvbWFpbjogbnVsbCxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0UmVzdWx0KHJlc3VsdCkge1xuICAgIHJlc3VsdC5kb21haW4gPSBudWxsO1xuICAgIHJlc3VsdC5kb21haW5XaXRob3V0U3VmZml4ID0gbnVsbDtcbiAgICByZXN1bHQuaG9zdG5hbWUgPSBudWxsO1xuICAgIHJlc3VsdC5pc0ljYW5uID0gbnVsbDtcbiAgICByZXN1bHQuaXNJcCA9IG51bGw7XG4gICAgcmVzdWx0LmlzUHJpdmF0ZSA9IG51bGw7XG4gICAgcmVzdWx0LnB1YmxpY1N1ZmZpeCA9IG51bGw7XG4gICAgcmVzdWx0LnN1YmRvbWFpbiA9IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbXBsKHVybCwgc3RlcCwgc3VmZml4TG9va3VwLCBwYXJ0aWFsT3B0aW9ucywgcmVzdWx0KSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IC8qQF9fSU5MSU5FX18qLyBzZXREZWZhdWx0cyhwYXJ0aWFsT3B0aW9ucyk7XG4gICAgLy8gVmVyeSBmYXN0IGFwcHJveGltYXRlIGNoZWNrIHRvIG1ha2Ugc3VyZSBgdXJsYCBpcyBhIHN0cmluZy4gVGhpcyBpcyBuZWVkZWRcbiAgICAvLyBiZWNhdXNlIHRoZSBsaWJyYXJ5IHdpbGwgbm90IG5lY2Vzc2FyaWx5IGJlIHVzZWQgaW4gYSB0eXBlZCBzZXR1cCBhbmRcbiAgICAvLyB2YWx1ZXMgb2YgYXJiaXRyYXJ5IHR5cGVzIG1pZ2h0IGJlIGdpdmVuIGFzIGFyZ3VtZW50LlxuICAgIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvLyBFeHRyYWN0IGhvc3RuYW1lIGZyb20gYHVybGAgb25seSBpZiBuZWVkZWQuIFRoaXMgY2FuIGJlIG1hZGUgb3B0aW9uYWxcbiAgICAvLyB1c2luZyBgb3B0aW9ucy5leHRyYWN0SG9zdG5hbWVgLiBUaGlzIG9wdGlvbiB3aWxsIHR5cGljYWxseSBiZSB1c2VkXG4gICAgLy8gd2hlbmV2ZXIgd2UgYXJlIHN1cmUgdGhlIGlucHV0cyB0byBgcGFyc2VgIGFyZSBhbHJlYWR5IGhvc3RuYW1lcyBhbmQgbm90XG4gICAgLy8gYXJiaXRyYXJ5IFVSTHMuXG4gICAgLy9cbiAgICAvLyBgbWl4ZWRJbnB1dGAgYWxsb3dzIHRvIHNwZWNpZnkgaWYgd2UgZXhwZWN0IGEgbWl4IG9mIFVSTHMgYW5kIGhvc3RuYW1lc1xuICAgIC8vIGFzIGlucHV0LiBJZiBvbmx5IGhvc3RuYW1lcyBhcmUgZXhwZWN0ZWQgdGhlbiBgZXh0cmFjdEhvc3RuYW1lYCBjYW4gYmVcbiAgICAvLyBzZXQgdG8gYGZhbHNlYCB0byBzcGVlZC11cCBwYXJzaW5nLiBJZiBvbmx5IFVSTHMgYXJlIGV4cGVjdGVkIHRoZW5cbiAgICAvLyBgbWl4ZWRJbnB1dHNgIGNhbiBiZSBzZXQgdG8gYGZhbHNlYC4gVGhlIGBtaXhlZElucHV0c2AgaXMgb25seSBhIGhpbnRcbiAgICAvLyBhbmQgd2lsbCBub3QgY2hhbmdlIHRoZSBiZWhhdmlvciBvZiB0aGUgbGlicmFyeS5cbiAgICBpZiAoIW9wdGlvbnMuZXh0cmFjdEhvc3RuYW1lKSB7XG4gICAgICAgIHJlc3VsdC5ob3N0bmFtZSA9IHVybDtcbiAgICB9XG4gICAgZWxzZSBpZiAob3B0aW9ucy5taXhlZElucHV0cykge1xuICAgICAgICByZXN1bHQuaG9zdG5hbWUgPSBleHRyYWN0SG9zdG5hbWUodXJsLCBpc1ZhbGlkSG9zdG5hbWUodXJsKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXN1bHQuaG9zdG5hbWUgPSBleHRyYWN0SG9zdG5hbWUodXJsLCBmYWxzZSk7XG4gICAgfVxuICAgIGlmIChzdGVwID09PSAwIC8qIEZMQUcuSE9TVE5BTUUgKi8gfHwgcmVzdWx0Lmhvc3RuYW1lID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8vIENoZWNrIGlmIGBob3N0bmFtZWAgaXMgYSB2YWxpZCBpcCBhZGRyZXNzXG4gICAgaWYgKG9wdGlvbnMuZGV0ZWN0SXApIHtcbiAgICAgICAgcmVzdWx0LmlzSXAgPSBpc0lwKHJlc3VsdC5ob3N0bmFtZSk7XG4gICAgICAgIGlmIChyZXN1bHQuaXNJcCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBQZXJmb3JtIG9wdGlvbmFsIGhvc3RuYW1lIHZhbGlkYXRpb24uIElmIGhvc3RuYW1lIGlzIG5vdCB2YWxpZCwgbm8gbmVlZCB0b1xuICAgIC8vIGdvIGZ1cnRoZXIgYXMgdGhlcmUgd2lsbCBiZSBubyB2YWxpZCBkb21haW4gb3Igc3ViLWRvbWFpbi5cbiAgICBpZiAob3B0aW9ucy52YWxpZGF0ZUhvc3RuYW1lICYmXG4gICAgICAgIG9wdGlvbnMuZXh0cmFjdEhvc3RuYW1lICYmXG4gICAgICAgICFpc1ZhbGlkSG9zdG5hbWUocmVzdWx0Lmhvc3RuYW1lKSkge1xuICAgICAgICByZXN1bHQuaG9zdG5hbWUgPSBudWxsO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvLyBFeHRyYWN0IHB1YmxpYyBzdWZmaXhcbiAgICBzdWZmaXhMb29rdXAocmVzdWx0Lmhvc3RuYW1lLCBvcHRpb25zLCByZXN1bHQpO1xuICAgIGlmIChzdGVwID09PSAyIC8qIEZMQUcuUFVCTElDX1NVRkZJWCAqLyB8fCByZXN1bHQucHVibGljU3VmZml4ID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8vIEV4dHJhY3QgZG9tYWluXG4gICAgcmVzdWx0LmRvbWFpbiA9IGdldERvbWFpbihyZXN1bHQucHVibGljU3VmZml4LCByZXN1bHQuaG9zdG5hbWUsIG9wdGlvbnMpO1xuICAgIGlmIChzdGVwID09PSAzIC8qIEZMQUcuRE9NQUlOICovIHx8IHJlc3VsdC5kb21haW4gPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLy8gRXh0cmFjdCBzdWJkb21haW5cbiAgICByZXN1bHQuc3ViZG9tYWluID0gZ2V0U3ViZG9tYWluKHJlc3VsdC5ob3N0bmFtZSwgcmVzdWx0LmRvbWFpbik7XG4gICAgaWYgKHN0ZXAgPT09IDQgLyogRkxBRy5TVUJfRE9NQUlOICovKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8vIEV4dHJhY3QgZG9tYWluIHdpdGhvdXQgc3VmZml4XG4gICAgcmVzdWx0LmRvbWFpbldpdGhvdXRTdWZmaXggPSBnZXREb21haW5XaXRob3V0U3VmZml4KHJlc3VsdC5kb21haW4sIHJlc3VsdC5wdWJsaWNTdWZmaXgpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYWN0b3J5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js":
/*!*******************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/is-ip.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIp)\n/* harmony export */ });\n/**\n * Check if a hostname is an IP. You should be aware that this only works\n * because `hostname` is already garanteed to be a valid hostname!\n */\nfunction isProbablyIpv4(hostname) {\n    // Cannot be shorted than 1.1.1.1\n    if (hostname.length < 7) {\n        return false;\n    }\n    // Cannot be longer than: 255.255.255.255\n    if (hostname.length > 15) {\n        return false;\n    }\n    let numberOfDots = 0;\n    for (let i = 0; i < hostname.length; i += 1) {\n        const code = hostname.charCodeAt(i);\n        if (code === 46 /* '.' */) {\n            numberOfDots += 1;\n        }\n        else if (code < 48 /* '0' */ || code > 57 /* '9' */) {\n            return false;\n        }\n    }\n    return (numberOfDots === 3 &&\n        hostname.charCodeAt(0) !== 46 /* '.' */ &&\n        hostname.charCodeAt(hostname.length - 1) !== 46 /* '.' */);\n}\n/**\n * Similar to isProbablyIpv4.\n */\nfunction isProbablyIpv6(hostname) {\n    if (hostname.length < 3) {\n        return false;\n    }\n    let start = hostname.startsWith('[') ? 1 : 0;\n    let end = hostname.length;\n    if (hostname[end - 1] === ']') {\n        end -= 1;\n    }\n    // We only consider the maximum size of a normal IPV6. Note that this will\n    // fail on so-called \"IPv4 mapped IPv6 addresses\" but this is a corner-case\n    // and a proper validation library should be used for these.\n    if (end - start > 39) {\n        return false;\n    }\n    let hasColon = false;\n    for (; start < end; start += 1) {\n        const code = hostname.charCodeAt(start);\n        if (code === 58 /* ':' */) {\n            hasColon = true;\n        }\n        else if (!(((code >= 48 && code <= 57) || // 0-9\n            (code >= 97 && code <= 102) || // a-f\n            (code >= 65 && code <= 90)) // A-F\n        )) {\n            return false;\n        }\n    }\n    return hasColon;\n}\n/**\n * Check if `hostname` is *probably* a valid ip addr (either ipv6 or ipv4).\n * This *will not* work on any string. We need `hostname` to be a valid\n * hostname.\n */\nfunction isIp(hostname) {\n    return isProbablyIpv6(hostname) || isProbablyIpv4(hostname);\n}\n//# sourceMappingURL=is-ip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvaXMtaXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9pcy1pcC5qcz82NTg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgYSBob3N0bmFtZSBpcyBhbiBJUC4gWW91IHNob3VsZCBiZSBhd2FyZSB0aGF0IHRoaXMgb25seSB3b3Jrc1xuICogYmVjYXVzZSBgaG9zdG5hbWVgIGlzIGFscmVhZHkgZ2FyYW50ZWVkIHRvIGJlIGEgdmFsaWQgaG9zdG5hbWUhXG4gKi9cbmZ1bmN0aW9uIGlzUHJvYmFibHlJcHY0KGhvc3RuYW1lKSB7XG4gICAgLy8gQ2Fubm90IGJlIHNob3J0ZWQgdGhhbiAxLjEuMS4xXG4gICAgaWYgKGhvc3RuYW1lLmxlbmd0aCA8IDcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBDYW5ub3QgYmUgbG9uZ2VyIHRoYW46IDI1NS4yNTUuMjU1LjI1NVxuICAgIGlmIChob3N0bmFtZS5sZW5ndGggPiAxNSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBudW1iZXJPZkRvdHMgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaG9zdG5hbWUubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3QgY29kZSA9IGhvc3RuYW1lLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChjb2RlID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG51bWJlck9mRG90cyArPSAxO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNvZGUgPCA0OCAvKiAnMCcgKi8gfHwgY29kZSA+IDU3IC8qICc5JyAqLykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAobnVtYmVyT2ZEb3RzID09PSAzICYmXG4gICAgICAgIGhvc3RuYW1lLmNoYXJDb2RlQXQoMCkgIT09IDQ2IC8qICcuJyAqLyAmJlxuICAgICAgICBob3N0bmFtZS5jaGFyQ29kZUF0KGhvc3RuYW1lLmxlbmd0aCAtIDEpICE9PSA0NiAvKiAnLicgKi8pO1xufVxuLyoqXG4gKiBTaW1pbGFyIHRvIGlzUHJvYmFibHlJcHY0LlxuICovXG5mdW5jdGlvbiBpc1Byb2JhYmx5SXB2Nihob3N0bmFtZSkge1xuICAgIGlmIChob3N0bmFtZS5sZW5ndGggPCAzKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHN0YXJ0ID0gaG9zdG5hbWUuc3RhcnRzV2l0aCgnWycpID8gMSA6IDA7XG4gICAgbGV0IGVuZCA9IGhvc3RuYW1lLmxlbmd0aDtcbiAgICBpZiAoaG9zdG5hbWVbZW5kIC0gMV0gPT09ICddJykge1xuICAgICAgICBlbmQgLT0gMTtcbiAgICB9XG4gICAgLy8gV2Ugb25seSBjb25zaWRlciB0aGUgbWF4aW11bSBzaXplIG9mIGEgbm9ybWFsIElQVjYuIE5vdGUgdGhhdCB0aGlzIHdpbGxcbiAgICAvLyBmYWlsIG9uIHNvLWNhbGxlZCBcIklQdjQgbWFwcGVkIElQdjYgYWRkcmVzc2VzXCIgYnV0IHRoaXMgaXMgYSBjb3JuZXItY2FzZVxuICAgIC8vIGFuZCBhIHByb3BlciB2YWxpZGF0aW9uIGxpYnJhcnkgc2hvdWxkIGJlIHVzZWQgZm9yIHRoZXNlLlxuICAgIGlmIChlbmQgLSBzdGFydCA+IDM5KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IGhhc0NvbG9uID0gZmFsc2U7XG4gICAgZm9yICg7IHN0YXJ0IDwgZW5kOyBzdGFydCArPSAxKSB7XG4gICAgICAgIGNvbnN0IGNvZGUgPSBob3N0bmFtZS5jaGFyQ29kZUF0KHN0YXJ0KTtcbiAgICAgICAgaWYgKGNvZGUgPT09IDU4IC8qICc6JyAqLykge1xuICAgICAgICAgICAgaGFzQ29sb24gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCEoKChjb2RlID49IDQ4ICYmIGNvZGUgPD0gNTcpIHx8IC8vIDAtOVxuICAgICAgICAgICAgKGNvZGUgPj0gOTcgJiYgY29kZSA8PSAxMDIpIHx8IC8vIGEtZlxuICAgICAgICAgICAgKGNvZGUgPj0gNjUgJiYgY29kZSA8PSA5MCkpIC8vIEEtRlxuICAgICAgICApKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGhhc0NvbG9uO1xufVxuLyoqXG4gKiBDaGVjayBpZiBgaG9zdG5hbWVgIGlzICpwcm9iYWJseSogYSB2YWxpZCBpcCBhZGRyIChlaXRoZXIgaXB2NiBvciBpcHY0KS5cbiAqIFRoaXMgKndpbGwgbm90KiB3b3JrIG9uIGFueSBzdHJpbmcuIFdlIG5lZWQgYGhvc3RuYW1lYCB0byBiZSBhIHZhbGlkXG4gKiBob3N0bmFtZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNJcChob3N0bmFtZSkge1xuICAgIHJldHVybiBpc1Byb2JhYmx5SXB2Nihob3N0bmFtZSkgfHwgaXNQcm9iYWJseUlwdjQoaG9zdG5hbWUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtaXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js":
/*!**********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/is-valid.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Implements fast shallow verification of hostnames. This does not perform a\n * struct check on the content of labels (classes of Unicode characters, etc.)\n * but instead check that the structure is valid (number of labels, length of\n * labels, etc.).\n *\n * If you need stricter validation, consider using an external library.\n */\nfunction isValidAscii(code) {\n    return ((code >= 97 && code <= 122) || (code >= 48 && code <= 57) || code > 127);\n}\n/**\n * Check if a hostname string is valid. It's usually a preliminary check before\n * trying to use getDomain or anything else.\n *\n * Beware: it does not check if the TLD exists.\n */\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(hostname) {\n    if (hostname.length > 255) {\n        return false;\n    }\n    if (hostname.length === 0) {\n        return false;\n    }\n    if (\n    /*@__INLINE__*/ !isValidAscii(hostname.charCodeAt(0)) &&\n        hostname.charCodeAt(0) !== 46 && // '.' (dot)\n        hostname.charCodeAt(0) !== 95 // '_' (underscore)\n    ) {\n        return false;\n    }\n    // Validate hostname according to RFC\n    let lastDotIndex = -1;\n    let lastCharCode = -1;\n    const len = hostname.length;\n    for (let i = 0; i < len; i += 1) {\n        const code = hostname.charCodeAt(i);\n        if (code === 46 /* '.' */) {\n            if (\n            // Check that previous label is < 63 bytes long (64 = 63 + '.')\n            i - lastDotIndex > 64 ||\n                // Check that previous character was not already a '.'\n                lastCharCode === 46 ||\n                // Check that the previous label does not end with a '-' (dash)\n                lastCharCode === 45 ||\n                // Check that the previous label does not end with a '_' (underscore)\n                lastCharCode === 95) {\n                return false;\n            }\n            lastDotIndex = i;\n        }\n        else if (!( /*@__INLINE__*/(isValidAscii(code) || code === 45 || code === 95))) {\n            // Check if there is a forbidden character in the label\n            return false;\n        }\n        lastCharCode = code;\n    }\n    return (\n    // Check that last label is shorter than 63 chars\n    len - lastDotIndex - 1 <= 63 &&\n        // Check that the last character is an allowed trailing label character.\n        // Since we already checked that the char is a valid hostname character,\n        // we only need to check that it's different from '-'.\n        lastCharCode !== 45);\n}\n//# sourceMappingURL=is-valid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvaXMtdmFsaWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBZSxvQ0FBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9pcy12YWxpZC5qcz9jMTk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW1wbGVtZW50cyBmYXN0IHNoYWxsb3cgdmVyaWZpY2F0aW9uIG9mIGhvc3RuYW1lcy4gVGhpcyBkb2VzIG5vdCBwZXJmb3JtIGFcbiAqIHN0cnVjdCBjaGVjayBvbiB0aGUgY29udGVudCBvZiBsYWJlbHMgKGNsYXNzZXMgb2YgVW5pY29kZSBjaGFyYWN0ZXJzLCBldGMuKVxuICogYnV0IGluc3RlYWQgY2hlY2sgdGhhdCB0aGUgc3RydWN0dXJlIGlzIHZhbGlkIChudW1iZXIgb2YgbGFiZWxzLCBsZW5ndGggb2ZcbiAqIGxhYmVscywgZXRjLikuXG4gKlxuICogSWYgeW91IG5lZWQgc3RyaWN0ZXIgdmFsaWRhdGlvbiwgY29uc2lkZXIgdXNpbmcgYW4gZXh0ZXJuYWwgbGlicmFyeS5cbiAqL1xuZnVuY3Rpb24gaXNWYWxpZEFzY2lpKGNvZGUpIHtcbiAgICByZXR1cm4gKChjb2RlID49IDk3ICYmIGNvZGUgPD0gMTIyKSB8fCAoY29kZSA+PSA0OCAmJiBjb2RlIDw9IDU3KSB8fCBjb2RlID4gMTI3KTtcbn1cbi8qKlxuICogQ2hlY2sgaWYgYSBob3N0bmFtZSBzdHJpbmcgaXMgdmFsaWQuIEl0J3MgdXN1YWxseSBhIHByZWxpbWluYXJ5IGNoZWNrIGJlZm9yZVxuICogdHJ5aW5nIHRvIHVzZSBnZXREb21haW4gb3IgYW55dGhpbmcgZWxzZS5cbiAqXG4gKiBCZXdhcmU6IGl0IGRvZXMgbm90IGNoZWNrIGlmIHRoZSBUTEQgZXhpc3RzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoaG9zdG5hbWUpIHtcbiAgICBpZiAoaG9zdG5hbWUubGVuZ3RoID4gMjU1KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGhvc3RuYW1lLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChcbiAgICAvKkBfX0lOTElORV9fKi8gIWlzVmFsaWRBc2NpaShob3N0bmFtZS5jaGFyQ29kZUF0KDApKSAmJlxuICAgICAgICBob3N0bmFtZS5jaGFyQ29kZUF0KDApICE9PSA0NiAmJiAvLyAnLicgKGRvdClcbiAgICAgICAgaG9zdG5hbWUuY2hhckNvZGVBdCgwKSAhPT0gOTUgLy8gJ18nICh1bmRlcnNjb3JlKVxuICAgICkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFZhbGlkYXRlIGhvc3RuYW1lIGFjY29yZGluZyB0byBSRkNcbiAgICBsZXQgbGFzdERvdEluZGV4ID0gLTE7XG4gICAgbGV0IGxhc3RDaGFyQ29kZSA9IC0xO1xuICAgIGNvbnN0IGxlbiA9IGhvc3RuYW1lLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGNvZGUgPSBob3N0bmFtZS5jaGFyQ29kZUF0KGkpO1xuICAgICAgICBpZiAoY29kZSA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAvLyBDaGVjayB0aGF0IHByZXZpb3VzIGxhYmVsIGlzIDwgNjMgYnl0ZXMgbG9uZyAoNjQgPSA2MyArICcuJylcbiAgICAgICAgICAgIGkgLSBsYXN0RG90SW5kZXggPiA2NCB8fFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIHRoYXQgcHJldmlvdXMgY2hhcmFjdGVyIHdhcyBub3QgYWxyZWFkeSBhICcuJ1xuICAgICAgICAgICAgICAgIGxhc3RDaGFyQ29kZSA9PT0gNDYgfHxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayB0aGF0IHRoZSBwcmV2aW91cyBsYWJlbCBkb2VzIG5vdCBlbmQgd2l0aCBhICctJyAoZGFzaClcbiAgICAgICAgICAgICAgICBsYXN0Q2hhckNvZGUgPT09IDQ1IHx8XG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgdGhhdCB0aGUgcHJldmlvdXMgbGFiZWwgZG9lcyBub3QgZW5kIHdpdGggYSAnXycgKHVuZGVyc2NvcmUpXG4gICAgICAgICAgICAgICAgbGFzdENoYXJDb2RlID09PSA5NSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxhc3REb3RJbmRleCA9IGk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoISggLypAX19JTkxJTkVfXyovKGlzVmFsaWRBc2NpaShjb2RlKSB8fCBjb2RlID09PSA0NSB8fCBjb2RlID09PSA5NSkpKSB7XG4gICAgICAgICAgICAvLyBDaGVjayBpZiB0aGVyZSBpcyBhIGZvcmJpZGRlbiBjaGFyYWN0ZXIgaW4gdGhlIGxhYmVsXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgbGFzdENoYXJDb2RlID0gY29kZTtcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAvLyBDaGVjayB0aGF0IGxhc3QgbGFiZWwgaXMgc2hvcnRlciB0aGFuIDYzIGNoYXJzXG4gICAgbGVuIC0gbGFzdERvdEluZGV4IC0gMSA8PSA2MyAmJlxuICAgICAgICAvLyBDaGVjayB0aGF0IHRoZSBsYXN0IGNoYXJhY3RlciBpcyBhbiBhbGxvd2VkIHRyYWlsaW5nIGxhYmVsIGNoYXJhY3Rlci5cbiAgICAgICAgLy8gU2luY2Ugd2UgYWxyZWFkeSBjaGVja2VkIHRoYXQgdGhlIGNoYXIgaXMgYSB2YWxpZCBob3N0bmFtZSBjaGFyYWN0ZXIsXG4gICAgICAgIC8vIHdlIG9ubHkgbmVlZCB0byBjaGVjayB0aGF0IGl0J3MgZGlmZmVyZW50IGZyb20gJy0nLlxuICAgICAgICBsYXN0Q2hhckNvZGUgIT09IDQ1KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLXZhbGlkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js":
/*!******************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(hostname, options, out) {\n    // Fast path for very popular suffixes; this allows to by-pass lookup\n    // completely as well as any extra allocation or string manipulation.\n    if (!options.allowPrivateDomains && hostname.length > 3) {\n        const last = hostname.length - 1;\n        const c3 = hostname.charCodeAt(last);\n        const c2 = hostname.charCodeAt(last - 1);\n        const c1 = hostname.charCodeAt(last - 2);\n        const c0 = hostname.charCodeAt(last - 3);\n        if (c3 === 109 /* 'm' */ &&\n            c2 === 111 /* 'o' */ &&\n            c1 === 99 /* 'c' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'com';\n            return true;\n        }\n        else if (c3 === 103 /* 'g' */ &&\n            c2 === 114 /* 'r' */ &&\n            c1 === 111 /* 'o' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'org';\n            return true;\n        }\n        else if (c3 === 117 /* 'u' */ &&\n            c2 === 100 /* 'd' */ &&\n            c1 === 101 /* 'e' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'edu';\n            return true;\n        }\n        else if (c3 === 118 /* 'v' */ &&\n            c2 === 111 /* 'o' */ &&\n            c1 === 103 /* 'g' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'gov';\n            return true;\n        }\n        else if (c3 === 116 /* 't' */ &&\n            c2 === 101 /* 'e' */ &&\n            c1 === 110 /* 'n' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'net';\n            return true;\n        }\n        else if (c3 === 101 /* 'e' */ &&\n            c2 === 100 /* 'd' */ &&\n            c1 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'de';\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=fast-path.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvbG9va3VwL2Zhc3QtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNkJBQWUsb0NBQVU7QUFDekIsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9sb29rdXAvZmFzdC1wYXRoLmpzPzc5OWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGhvc3RuYW1lLCBvcHRpb25zLCBvdXQpIHtcbiAgICAvLyBGYXN0IHBhdGggZm9yIHZlcnkgcG9wdWxhciBzdWZmaXhlczsgdGhpcyBhbGxvd3MgdG8gYnktcGFzcyBsb29rdXBcbiAgICAvLyBjb21wbGV0ZWx5IGFzIHdlbGwgYXMgYW55IGV4dHJhIGFsbG9jYXRpb24gb3Igc3RyaW5nIG1hbmlwdWxhdGlvbi5cbiAgICBpZiAoIW9wdGlvbnMuYWxsb3dQcml2YXRlRG9tYWlucyAmJiBob3N0bmFtZS5sZW5ndGggPiAzKSB7XG4gICAgICAgIGNvbnN0IGxhc3QgPSBob3N0bmFtZS5sZW5ndGggLSAxO1xuICAgICAgICBjb25zdCBjMyA9IGhvc3RuYW1lLmNoYXJDb2RlQXQobGFzdCk7XG4gICAgICAgIGNvbnN0IGMyID0gaG9zdG5hbWUuY2hhckNvZGVBdChsYXN0IC0gMSk7XG4gICAgICAgIGNvbnN0IGMxID0gaG9zdG5hbWUuY2hhckNvZGVBdChsYXN0IC0gMik7XG4gICAgICAgIGNvbnN0IGMwID0gaG9zdG5hbWUuY2hhckNvZGVBdChsYXN0IC0gMyk7XG4gICAgICAgIGlmIChjMyA9PT0gMTA5IC8qICdtJyAqLyAmJlxuICAgICAgICAgICAgYzIgPT09IDExMSAvKiAnbycgKi8gJiZcbiAgICAgICAgICAgIGMxID09PSA5OSAvKiAnYycgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnY29tJztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMDMgLyogJ2cnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTE0IC8qICdyJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDExMSAvKiAnbycgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnb3JnJztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMTcgLyogJ3UnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTAwIC8qICdkJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDEwMSAvKiAnZScgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnZWR1JztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMTggLyogJ3YnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTExIC8qICdvJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDEwMyAvKiAnZycgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnZ292JztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMTYgLyogJ3QnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTAxIC8qICdlJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDExMCAvKiAnbicgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnbmV0JztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMDEgLyogJ2UnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTAwIC8qICdkJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgb3V0LmlzSWNhbm4gPSB0cnVlO1xuICAgICAgICAgICAgb3V0LmlzUHJpdmF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgb3V0LnB1YmxpY1N1ZmZpeCA9ICdkZSc7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYXN0LXBhdGguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/options.js":
/*!*********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/options.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setDefaults: () => (/* binding */ setDefaults)\n/* harmony export */ });\nfunction setDefaultsImpl({ allowIcannDomains = true, allowPrivateDomains = false, detectIp = true, extractHostname = true, mixedInputs = true, validHosts = null, validateHostname = true, }) {\n    return {\n        allowIcannDomains,\n        allowPrivateDomains,\n        detectIp,\n        extractHostname,\n        mixedInputs,\n        validHosts,\n        validateHostname,\n    };\n}\nconst DEFAULT_OPTIONS = /*@__INLINE__*/ setDefaultsImpl({});\nfunction setDefaults(options) {\n    if (options === undefined) {\n        return DEFAULT_OPTIONS;\n    }\n    return /*@__INLINE__*/ setDefaultsImpl(options);\n}\n//# sourceMappingURL=options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvb3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMkJBQTJCLGlLQUFpSztBQUM1TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRDtBQUNuRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvb3B0aW9ucy5qcz8yNTJjIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHNldERlZmF1bHRzSW1wbCh7IGFsbG93SWNhbm5Eb21haW5zID0gdHJ1ZSwgYWxsb3dQcml2YXRlRG9tYWlucyA9IGZhbHNlLCBkZXRlY3RJcCA9IHRydWUsIGV4dHJhY3RIb3N0bmFtZSA9IHRydWUsIG1peGVkSW5wdXRzID0gdHJ1ZSwgdmFsaWRIb3N0cyA9IG51bGwsIHZhbGlkYXRlSG9zdG5hbWUgPSB0cnVlLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWxsb3dJY2FubkRvbWFpbnMsXG4gICAgICAgIGFsbG93UHJpdmF0ZURvbWFpbnMsXG4gICAgICAgIGRldGVjdElwLFxuICAgICAgICBleHRyYWN0SG9zdG5hbWUsXG4gICAgICAgIG1peGVkSW5wdXRzLFxuICAgICAgICB2YWxpZEhvc3RzLFxuICAgICAgICB2YWxpZGF0ZUhvc3RuYW1lLFxuICAgIH07XG59XG5jb25zdCBERUZBVUxUX09QVElPTlMgPSAvKkBfX0lOTElORV9fKi8gc2V0RGVmYXVsdHNJbXBsKHt9KTtcbmV4cG9ydCBmdW5jdGlvbiBzZXREZWZhdWx0cyhvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gREVGQVVMVF9PUFRJT05TO1xuICAgIH1cbiAgICByZXR1cm4gLypAX19JTkxJTkVfXyovIHNldERlZmF1bHRzSW1wbChvcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9wdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js":
/*!***********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/subdomain.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getSubdomain)\n/* harmony export */ });\n/**\n * Returns the subdomain of a hostname string\n */\nfunction getSubdomain(hostname, domain) {\n    // If `hostname` and `domain` are the same, then there is no sub-domain\n    if (domain.length === hostname.length) {\n        return '';\n    }\n    return hostname.slice(0, -domain.length - 1);\n}\n//# sourceMappingURL=subdomain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvc3ViZG9tYWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9zdWJkb21haW4uanM/YTUyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHVybnMgdGhlIHN1YmRvbWFpbiBvZiBhIGhvc3RuYW1lIHN0cmluZ1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRTdWJkb21haW4oaG9zdG5hbWUsIGRvbWFpbikge1xuICAgIC8vIElmIGBob3N0bmFtZWAgYW5kIGBkb21haW5gIGFyZSB0aGUgc2FtZSwgdGhlbiB0aGVyZSBpcyBubyBzdWItZG9tYWluXG4gICAgaWYgKGRvbWFpbi5sZW5ndGggPT09IGhvc3RuYW1lLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHJldHVybiBob3N0bmFtZS5zbGljZSgwLCAtZG9tYWluLmxlbmd0aCAtIDEpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3ViZG9tYWluLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js\n");

/***/ })

};
;